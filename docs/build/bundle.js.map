{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/@kurkle/color/dist/color.esm.js","../../node_modules/chart.js/dist/chunks/helpers.dataset.js","../../node_modules/chart.js/dist/chart.js","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\nfunction split_css_unit(value) {\n    const split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n    return split ? [parseFloat(split[1]), split[2] || 'px'] : [value, 'px'];\n}\nconst contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\n/**\n * Resize observer singleton.\n * One listener per element only!\n * https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n */\nclass ResizeObserverSingleton {\n    constructor(options) {\n        this.options = options;\n        this._listeners = 'WeakMap' in globals ? new WeakMap() : undefined;\n    }\n    observe(element, listener) {\n        this._listeners.set(element, listener);\n        this._getObserver().observe(element, this.options);\n        return () => {\n            this._listeners.delete(element);\n            this._observer.unobserve(element); // this line can probably be removed\n        };\n    }\n    _getObserver() {\n        var _a;\n        return (_a = this._observer) !== null && _a !== void 0 ? _a : (this._observer = new ResizeObserver((entries) => {\n            var _a;\n            for (const entry of entries) {\n                ResizeObserverSingleton.entries.set(entry.target, entry);\n                (_a = this._listeners.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n            }\n        }));\n    }\n}\n// Needs to be written like this to pass the tree-shake-test\nResizeObserverSingleton.entries = 'WeakMap' in globals ? new WeakMap() : undefined;\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction comment(content) {\n    return document.createComment(content);\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_immediate_propagation(fn) {\n    return function (event) {\n        event.stopImmediatePropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set && always_set_through_set_attribute.indexOf(key) === -1) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction set_dynamic_element_data(tag) {\n    return (/-/.test(tag)) ? set_custom_element_data_map : set_attributes;\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction init_binding_group(group) {\n    let _inputs;\n    return {\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            _inputs.forEach(input => group.push(input));\n        },\n        /* remove */ r() {\n            _inputs.forEach(input => group.splice(group.indexOf(input), 1));\n        }\n    };\n}\nfunction init_binding_group_dynamic(group, indexes) {\n    let _group = get_binding_group(group);\n    let _inputs;\n    function get_binding_group(group) {\n        for (let i = 0; i < indexes.length; i++) {\n            group = group[indexes[i]] = group[indexes[i]] || [];\n        }\n        return group;\n    }\n    function push() {\n        _inputs.forEach(input => _group.push(input));\n    }\n    function remove() {\n        _inputs.forEach(input => _group.splice(_group.indexOf(input), 1));\n    }\n    return {\n        /* update */ u(new_indexes) {\n            indexes = new_indexes;\n            const new_group = get_binding_group(group);\n            if (new_group !== _group) {\n                remove();\n                _group = new_group;\n                push();\n            }\n        },\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            push();\n        },\n        /* remove */ r: remove\n    };\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction claim_comment(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 8, (node) => {\n        node.data = '' + data;\n        return undefined;\n    }, () => comment(data), true);\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    text.data = data;\n}\nfunction set_data_contenteditable(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable(text, data);\n    }\n    else {\n        set_data(text, data);\n    }\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value == null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value, mounting) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    if (!mounting || value !== undefined) {\n        select.selectedIndex = -1; // no option should be selected\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked');\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_iframe_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n            // make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n            // see https://github.com/sveltejs/svelte/issues/4233\n            fn();\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nconst resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'content-box' });\nconst resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'border-box' });\nconst resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'device-pixel-content-box' });\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            /** #7364  target for <template> may be provided as #document-fragment(11) */\n            else\n                this.e = element((target.nodeType === 11 ? 'TEMPLATE' : target.nodeName));\n            this.t = target.tagName !== 'TEMPLATE' ? target : target.content;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nlet render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n */\nfunction flush_render_callbacks(fns) {\n    const filtered = [];\n    const targets = [];\n    render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));\n    targets.forEach((c) => c());\n    render_callbacks = filtered;\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    const updates = [];\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            // defer updates until all the DOM shuffling is done\n            updates.push(() => block.p(child_ctx, dirty));\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    run_all(updates);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst _boolean_attributes = [\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n];\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n */\nconst boolean_attributes = new Set([..._boolean_attributes]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        flush_render_callbacks($$.after_update);\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.59.2' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation, has_stop_immediate_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    if (has_stop_immediate_propagation)\n        modifiers.push('stopImmediatePropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_contenteditable_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable_dev(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable_dev(text, data);\n    }\n    else {\n        set_data_dev(text, data);\n    }\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, ResizeObserverSingleton, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_iframe_resize_listener, add_location, add_render_callback, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_comment, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, comment, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, contenteditable_truthy_values, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, flush_render_callbacks, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, init_binding_group, init_binding_group_dynamic, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, resize_observer_border_box, resize_observer_content_box, resize_observer_device_pixel_content_box, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_contenteditable, set_data_contenteditable_dev, set_data_dev, set_data_maybe_contenteditable, set_data_maybe_contenteditable_dev, set_dynamic_element_data, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, split_css_unit, spread, src_url_equal, start_hydrating, stop_immediate_propagation, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.9\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || value === undefined;\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */ function isNonPrimitive(n) {\n    return typeof n === 'symbol' || typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n);\n}\nfunction isNumber(n) {\n    return !isNonPrimitive(n) && !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , vScale , _parsed  } = meta;\n        const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n            if (spanGaps) {\n                const distanceToDefinedLo = _parsed.slice(0, start + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                start -= Math.max(0, distanceToDefinedLo);\n            }\n            start = _limitValue(start, 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            let end = Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n            if (spanGaps) {\n                const distanceToDefinedHi = _parsed.slice(end - 1).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                end += Math.max(0, distanceToDefinedHi);\n            }\n            count = _limitValue(end, start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nfunction getDatasetClipArea(chart, meta) {\n    const clip = meta._clip;\n    if (clip.disabled) {\n        return false;\n    }\n    const area = getDatasetArea(meta, chart.chartArea);\n    return {\n        left: clip.left === false ? 0 : area.left - (clip.left === true ? 0 : clip.left),\n        right: clip.right === false ? chart.width : area.right + (clip.right === true ? 0 : clip.right),\n        top: clip.top === false ? 0 : area.top - (clip.top === true ? 0 : clip.top),\n        bottom: clip.bottom === false ? chart.height : area.bottom + (clip.bottom === true ? 0 : clip.bottom)\n    };\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, getStyle as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, getRtlAdapter as aA, overrideTextDirection as aB, _textX as aC, restoreTextDirection as aD, drawPointLegend as aE, distanceBetweenPoints as aF, noop as aG, _setMinAndMaxByKey as aH, niceNum as aI, almostWhole as aJ, almostEquals as aK, _decimalPlaces as aL, Ticks as aM, log10 as aN, _longestText as aO, _filterBetween as aP, _lookup as aQ, isPatternOrGradient as aR, getHoverColor as aS, clone as aT, _merger as aU, _mergerIf as aV, _deprecated as aW, _splitKey as aX, toFontString as aY, splineCurve as aZ, splineCurveMonotone as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, getDatasetClipArea as ah, _elementsEqual as ai, _isClickEvent as aj, _isBetween as ak, _readValueToProps as al, _updateBezierControlPoints as am, _computeSegments as an, _boundSegments as ao, _steppedInterpolation as ap, _bezierInterpolation as aq, _pointInLine as ar, _steppedLineTo as as, _bezierCurveTo as at, drawPoint as au, addRoundedRectPath as av, toTRBL as aw, toTRBLCorners as ax, _boundSegment as ay, _normalizeAngle as az, isArray as b, fontString as b0, toLineHeight as b1, PITAU as b2, INFINITY as b3, RAD_PER_DEG as b4, QUARTER_PI as b5, TWO_THIRDS_PI as b6, _angleDiff as b7, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.dataset.js.map\n","/*!\n * Chart.js v4.4.9\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as getDatasetClipArea, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _readValueToProps, am as _updateBezierControlPoints, an as _computeSegments, ao as _boundSegments, ap as _steppedInterpolation, aq as _bezierInterpolation, ar as _pointInLine, as as _steppedLineTo, at as _bezierCurveTo, au as drawPoint, av as addRoundedRectPath, aw as toTRBL, ax as toTRBLCorners, ay as _boundSegment, az as _normalizeAngle, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as distanceBetweenPoints, aG as noop, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as Ticks, aN as log10, aO as _longestText, aP as _filterBetween, aQ as _lookup } from './chunks/helpers.dataset.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            const result = lookupMethod(data, axis, value);\n            if (spanGaps) {\n                const { vScale  } = controller._cachedMeta;\n                const { _parsed  } = metaset;\n                const distanceToDefinedLo = _parsed.slice(0, result.lo + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.lo -= Math.max(0, distanceToDefinedLo);\n                const distanceToDefinedHi = _parsed.slice(result.hi).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.hi += Math.max(0, distanceToDefinedHi);\n            }\n            return result;\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.9\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        const clip = getDatasetClipArea(this, meta);\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (clip) {\n            clipArea(ctx, clip);\n        }\n        meta.controller.draw();\n        if (clip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { chart , index , line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    const meta = chart.getDatasetMeta(index);\n    const clip = getDatasetClipArea(chart, meta);\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis,\n            clip\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale , clip  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property,\n            clip\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property,\n        clip\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale , clip  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, clip, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, clip, bounds) {\n    const chartArea = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x' || property === 'y') {\n        let left, top, right, bottom;\n        if (property === 'x') {\n            left = start;\n            top = chartArea.top;\n            right = end;\n            bottom = chartArea.bottom;\n        } else {\n            left = chartArea.left;\n            top = start;\n            right = chartArea.right;\n            bottom = end;\n        }\n        ctx.beginPath();\n        if (clip) {\n            left = Math.max(left, clip.left);\n            right = Math.min(right, clip.right);\n            top = Math.max(top, clip.top);\n            bottom = Math.min(bottom, clip.bottom);\n        }\n        ctx.rect(left, top, right - left, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","<script>\r\n\timport { onMount, tick } from 'svelte';\r\n\timport { Chart, registerables } from 'chart.js';\r\n\tChart.register(...registerables);\r\n\r\n\tlet ticker = 'AAPL';\r\n\tlet start = '2020-01-01';\r\n\tlet end = '2024-12-31';\r\n\tlet investment_amount = 1000;\r\n\tlet monthly_contribution = 50;\r\n\tlet country = 'US';\r\n\tlet result = null;\r\n\tlet loading = false;\r\n\tlet chartCanvas;\r\n\tlet chart;\r\n\r\n\tlet avgAnnualNominalReturn = null;\r\n\tlet avgAnnualRealReturn = null;\r\n\tlet avgAnnualInflation = null;\r\n\r\n\tconst popularTickers = [\r\n\t\t{ name: 'S&P 500', symbol: '^GSPC' },\r\n\t\t{ name: 'NASDAQ 100', symbol: '^NDX' },\r\n\t\t{ name: 'Dow Jones', symbol: '^DJI' },\r\n\t\t{ name: 'Russell 2000', symbol: '^RUT' },\r\n\t\t{ name: 'FTSE 100', symbol: '^FTSE' },\r\n\t\t{ name: 'DAX', symbol: '^GDAXI' },\r\n\t\t{ name: 'CAC 40', symbol: '^FCHI' },\r\n\t\t{ name: 'Nikkei 225', symbol: '^N225' },\r\n\t\t{ name: 'Hang Seng', symbol: '^HSI' },\r\n\t\t{ name: 'Apple Inc.', symbol: 'AAPL' }\r\n\t];\r\n\r\n\tfunction calculateAverageAnnualReturns(data, initialInvestment, monthlyContribution) {\r\n\t\tconst totalMonths = data.length;\r\n\t\tconst totalNominalCashInvested = initialInvestment + monthlyContribution * (totalMonths - 1);\r\n\r\n\t\t// Calculate weighted average months invested\r\n\t\tconst sumMonthsInvestedForContributions = ((totalMonths - 1) * totalMonths) / 2;\r\n\t\tconst weightedMonthsInvested =\r\n\t\t\tinitialInvestment * totalMonths + monthlyContribution * sumMonthsInvestedForContributions;\r\n\t\tconst weightedAvgMonthsInvested = weightedMonthsInvested / totalNominalCashInvested;\r\n\t\tconst weightedAvgYearsInvested = weightedAvgMonthsInvested / 12;\r\n\r\n\t\tconst finalNominalValue = data[data.length - 1].nominal_value;\r\n\t\tconst finalRealValue = data[data.length - 1].real_value;\r\n\r\n\t\tconst avgAnnualNominalReturn = Math.pow(finalNominalValue / totalNominalCashInvested, 1 / weightedAvgYearsInvested) - 1;\r\n\t\tconst avgAnnualRealReturn = Math.pow(finalRealValue / totalNominalCashInvested, 1 / weightedAvgYearsInvested) - 1;\r\n\r\n\t\treturn {\r\n\t\t\tavgAnnualNominalReturn: avgAnnualNominalReturn * 100,\r\n\t\t\tavgAnnualRealReturn: avgAnnualRealReturn * 100,\r\n\t\t\tweightedAvgYearsInvested\r\n\t\t};\r\n\t}\r\n\r\n\tasync function fetchData() {\r\n\t\tloading = true;\r\n\t\tresult = null;\r\n\t\tavgAnnualNominalReturn = null;\r\n\t\tavgAnnualRealReturn = null;\r\n\t\tavgAnnualInflation = null;\r\n\r\n\t\tconst url = `https://web-production-feab.up.railway.app/investment_performance?ticker=${ticker}&start=${start}&end=${end}&investment_amount=${investment_amount}&monthly_contribution=${monthly_contribution}&country=${country}`;\r\n\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) throw new Error('API error');\r\n\t\t\tresult = await res.json();\r\n\r\n\t\t\tif (result?.monthly_data?.length) {\r\n\t\t\t\t// Calculate final nominal and real values per month for weighted return calculation\r\n\t\t\t\tcalculateMonthlyFinalValues(result.monthly_data);\r\n\r\n\t\t\t\tconst returns = calculateAverageAnnualReturns(\r\n\t\t\t\t\tresult.monthly_data,\r\n\t\t\t\t\tresult.investment_amount,\r\n\t\t\t\t\tresult.monthly_contribution\r\n\t\t\t\t);\r\n\r\n\t\t\t\tavgAnnualNominalReturn = returns.avgAnnualNominalReturn;\r\n\t\t\t\tavgAnnualRealReturn = returns.avgAnnualRealReturn;\r\n\t\t\t\tavgAnnualInflation = result.annualized_inflation_percent;\r\n\r\n\t\t\t\tawait tick();\r\n\t\t\t\tdrawChart(result.monthly_data);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tresult = { error: 'Failed to fetch data. Please check inputs or try again later.' };\r\n\t\t} finally {\r\n\t\t\tloading = false;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction calculateMonthlyFinalValues(data) {\r\n\t\tlet nominalValue = result.investment_amount;\r\n\t\tlet realValue = result.investment_amount;\r\n\r\n\t\tfor (let i = 0; i < data.length; i++) {\r\n\t\t\tif (i > 0) {\r\n\t\t\t\tnominalValue += result.monthly_contribution;\r\n\t\t\t\trealValue += result.monthly_contribution;\r\n\t\t\t}\r\n\t\t\tnominalValue *= (1 + data[i].nominal_return_percent / 100);\r\n\t\t\trealValue *= (1 + data[i].real_return_percent / 100);\r\n\r\n\t\t\tdata[i].nominal_value = nominalValue;\r\n\t\t\tdata[i].real_value = realValue;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction drawChart(data) {\r\n\t\tconst labels = data.map(item => item.month);\r\n\t\tconst nominalValues = data.map(item => item.nominal_value.toFixed(2));\r\n\t\tconst realValues = data.map(item => item.real_value.toFixed(2));\r\n\r\n\t\tlet cashValue = result.investment_amount;\r\n\t\tlet nominalCash = result.investment_amount;\r\n\t\tconst cashValues = [];\r\n\t\tconst nominalCashValues = [];\r\n\r\n\t\tdata.forEach((item, i) => {\r\n\t\t\tif (i > 0) {\r\n\t\t\t\tcashValue += result.monthly_contribution;\r\n\t\t\t\tnominalCash += result.monthly_contribution;\r\n\t\t\t}\r\n\r\n\t\t\tcashValue *= 1 / (1 + item.inflation_rate_percent / 100);\r\n\r\n\t\t\tcashValues.push(cashValue.toFixed(2));\r\n\t\t\tnominalCashValues.push(nominalCash.toFixed(2));\r\n\t\t});\r\n\r\n\t\tif (chart) chart.destroy();\r\n\r\n\t\tchart = new Chart(chartCanvas, {\r\n\t\t\ttype: 'line',\r\n\t\t\tdata: {\r\n\t\t\t\tlabels,\r\n\t\t\t\tdatasets: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: `${ticker} Nominal Value`,\r\n\t\t\t\t\t\tdata: nominalValues,\r\n\t\t\t\t\t\tborderColor: 'royalblue',\r\n\t\t\t\t\t\tbackgroundColor: 'rgba(65, 105, 225, 0.2)',\r\n\t\t\t\t\t\tfill: false,\r\n\t\t\t\t\t\ttension: 0.3\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: `${ticker} Real Value`,\r\n\t\t\t\t\t\tdata: realValues,\r\n\t\t\t\t\t\tborderColor: 'green',\r\n\t\t\t\t\t\tbackgroundColor: 'rgba(34, 139, 34, 0.2)',\r\n\t\t\t\t\t\tfill: false,\r\n\t\t\t\t\t\ttension: 0.3\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'Cash Buying Power',\r\n\t\t\t\t\t\tdata: cashValues,\r\n\t\t\t\t\t\tborderColor: 'orangered',\r\n\t\t\t\t\t\tbackgroundColor: 'rgba(255, 69, 0, 0.2)',\r\n\t\t\t\t\t\tfill: false,\r\n\t\t\t\t\t\tborderDash: [5, 5],\r\n\t\t\t\t\t\ttension: 0.3\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'Nominal Cash (No Investment Growth)',\r\n\t\t\t\t\t\tdata: nominalCashValues,\r\n\t\t\t\t\t\tborderColor: 'gray',\r\n\t\t\t\t\t\tbackgroundColor: 'rgba(128,128,128,0.2)',\r\n\t\t\t\t\t\tfill: false,\r\n\t\t\t\t\t\tborderDash: [3, 3],\r\n\t\t\t\t\t\ttension: 0.3\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\toptions: {\r\n\t\t\t\tresponsive: true,\r\n\t\t\t\tscales: {\r\n\t\t\t\t\tx: {\r\n\t\t\t\t\t\ttitle: { display: true, text: 'Month' }\r\n\t\t\t\t\t},\r\n\t\t\t\t\ty: {\r\n\t\t\t\t\t\ttitle: { display: true, text: 'Value ($)' },\r\n\t\t\t\t\t\tbeginAtZero: false\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n</script>\r\n\r\n<style>\r\n\th1 {\r\n\t\tmargin-bottom: 1em;\r\n\t}\r\n\t.input-row {\r\n\t\tdisplay: flex;\r\n\t\tflex-wrap: wrap;\r\n\t\tgap: 1em;\r\n\t\tmargin-bottom: 1em;\r\n\t}\r\n\t.left-inputs {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: 0.5em;\r\n\t\tflex: 1;\r\n\t\tmax-width: 400px;\r\n\t}\r\n\t.dropdown {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: 0.3em;\r\n\t\tmin-width: 200px;\r\n\t}\r\n\tinput, select, button {\r\n\t\tpadding: 0.5em;\r\n\t\tfont-size: 1em;\r\n\t}\r\n\tcanvas {\r\n\t\tmargin-top: 2em;\r\n\t\tmax-width: 100%;\r\n\t}\r\n\tp.error {\r\n\t\tcolor: red;\r\n\t}\r\n\t.stats {\r\n\t\tmargin-bottom: 1em;\r\n\t}\r\n\t.stats strong {\r\n\t\tfont-size: 1.5em;\r\n\t\tmargin-right: 1.5em;\r\n\t\tdisplay: inline-block;\r\n\t}\r\n</style>\r\n\r\n<h1>Investment Performance Tracker</h1>\r\n\r\n<form on:submit|preventDefault={fetchData}>\r\n\t<div class=\"input-row\">\r\n\t\t<div class=\"left-inputs\">\r\n\t\t\t<input bind:value={ticker} placeholder=\"Ticker (e.g. AAPL)\" />\r\n\t\t\t<input type=\"date\" bind:value={start} />\r\n\t\t\t<input type=\"date\" bind:value={end} />\r\n\t\t\t<input type=\"number\" bind:value={investment_amount} placeholder=\"Initial Investment\" />\r\n\t\t\t<input type=\"number\" bind:value={monthly_contribution} placeholder=\"Monthly Contribution\" />\r\n\t\t\t<input bind:value={country} placeholder=\"Country Code (e.g. US)\" />\r\n\t\t\t<button type=\"submit\" disabled={loading}>{loading ? 'Loading...' : 'Get Performance'}</button>\r\n\t\t</div>\r\n\t\t<div class=\"dropdown\">\r\n\t\t\t<label>Popular Indexes:</label>\r\n\t\t\t<select on:change={(e) => ticker = e.target.value}>\r\n\t\t\t\t<option value=\"\">-- Choose an index --</option>\r\n\t\t\t\t{#each popularTickers as index}\r\n\t\t\t\t\t<option value={index.symbol}>{index.name}</option>\r\n\t\t\t\t{/each}\r\n\t\t\t</select>\r\n\t\t</div>\r\n\t</div>\r\n</form>\r\n\r\n{#if result?.monthly_data}\r\n\t<div class=\"stats\">\r\n\t\t<strong>\r\n\t\t\tAverage Annual Nominal Return: {avgAnnualNominalReturn?.toFixed(2)}%\r\n\t\t</strong>\r\n\t\t<strong>\r\n\t\t\tAverage Annual Real Return: \r\n\t\t\t<span style=\"color: {avgAnnualRealReturn >= 0 ? 'green' : 'red'}\">\r\n\t\t\t\t{avgAnnualRealReturn?.toFixed(2)}%\r\n\t\t\t</span>\r\n\t\t</strong>\r\n\t\t<strong>\r\n\t\t\tAverage Annual Inflation: {avgAnnualInflation?.toFixed(2)}%\r\n\t\t</strong>\r\n\t</div>\r\n\t<h2>Nominal vs Real Value</h2>\r\n\t<canvas bind:this={chartCanvas}></canvas>\r\n{/if}\r\n\r\n{#if result?.error}\r\n\t<p class=\"error\">{result.error}</p>\r\n{/if}\r\n","import App from './App.svelte';\r\n\r\nconst app = new App({\r\n\ttarget: document.body,\r\n\tprops: {\r\n\t\tname: 'world'\r\n\t}\r\n});\r\n\r\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","to_number","set_data","set_input_value","input","set_style","key","important","style","removeProperty","setProperty","current_component","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","add_render_callback","push","seen_callbacks","Set","flushidx","saved_component","length","update","$$","e","pop","i","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","destroy_component","detaching","filtered","targets","c","indexOf","flush_render_callbacks","on_destroy","d","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_mount","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","fill","make_dirty","hydrate","nodes","Array","from","childNodes","children","l","intro","block","delete","local","customElement","m","new_on_destroy","map","filter","mount_component","SvelteComponent","$destroy","this","$on","type","index","splice","$set","$$props","obj","$$set","keys","round","v","lim","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","isArray","hsl2rgb","hue","hueParse","str","exec","p1","p2","hwb2rgb","hsv2rgb","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","pow","modHSL","ratio","tmp","clone","proto","assign","fromObject","functionParse","charAt","rgbParse","Color","constructor","len","_rgb","_valid","valid","rgbString","hslString","mix","color","weight","c1","c2","w2","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","uid","id","isNullOrUndef","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","source","klen","isValidKey","_merger","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","resolveObjectKey","resolver","parts","split","part","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","Symbol","toPrimitive","isNonPrimitive","isNaN","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","_arrayUnique","items","set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","vScale","_parsed","spanGaps","dataset","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","distanceToDefinedLo","findIndex","point","distanceToDefinedHi","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope$1","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","platform","getDevicePixelRatio","elements","events","font","family","lineHeight","hover","hoverBackgroundColor","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","borderWidth","stroke","_isPointInArea","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","Error","join","_resolveScriptable","isIndexable","arr","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","_getParentNode","domNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","getSizeForArea","chartArea","field","getDatasetClipArea","_clip","disabled","getDatasetArea","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","elapsed","wait","promises","res","rej","resolved","method","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","found","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","iAxisKey","vAxisKey","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","toClip","defaultClip","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","DoughnutController","animateRotate","animateScale","cutout","circumference","spacing","legend","generateLabels","fontColor","getDataVisibility","legendItem","toggleDataVisibility","super","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","controllers","__proto__","BarController","categoryPercentage","barPercentage","grouped","_index_","_value_","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","currentParsed","iScaleValue","skipNull","find","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","BubbleController","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","abstract","DateAdapterBase","members","formats","diff","startOf","endOf","adapters","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","renderWidth","displayWidth","displayHeight","initCanvas","proxies","$proxies","attach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","scaleOptions","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","BarElement","addRectPath","mouseX","mouseY","inXRange","inYRange","PointElement","hoverRadius","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","plugin_colors","forceOverride","_args","chartOptions","containsColorDefenition","colorizer","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","Colors","Decimation","Filler","SubTitle","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","generateTicks","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","itemOpts","extra","createPointLabelItem","isNotOverlapped","buildPointLabelItems","hLimits","vLimits","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","CategoryScale","_addedLabels","added","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","t_value","__value","symbol","toFixed","div","strong0","strong1","strong2","t1","t1_value","t5","t5_value","t9","t9_value","if_block0","monthly_data","create_if_block_1","if_block1","create_if_block","form","div2","div0","input0","input1","input2","input3","input4","input5","button","div1","select","preventDefault","t8","t8_value","iterations","chartCanvas","ticker","investment_amount","monthly_contribution","country","loading","avgAnnualNominalReturn","avgAnnualRealReturn","avgAnnualInflation","$$invalidate","url","fetch","json","nominalValue","realValue","nominal_return_percent","real_return_percent","nominal_value","real_value","calculateMonthlyFinalValues","returns","initialInvestment","monthlyContribution","totalMonths","totalNominalCashInvested","weightedAvgYearsInvested","finalNominalValue","finalRealValue","calculateAverageAnnualReturns","annualized_inflation_percent","nominalValues","realValues","cashValue","nominalCash","cashValues","nominalCashValues","inflation_rate_percent","drawChart","$$value"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}