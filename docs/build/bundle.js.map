{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/@kurkle/color/dist/color.esm.js","../../node_modules/chart.js/dist/chunks/helpers.dataset.js","../../node_modules/chart.js/dist/chart.js","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\nfunction split_css_unit(value) {\n    const split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n    return split ? [parseFloat(split[1]), split[2] || 'px'] : [value, 'px'];\n}\nconst contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\n/**\n * Resize observer singleton.\n * One listener per element only!\n * https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n */\nclass ResizeObserverSingleton {\n    constructor(options) {\n        this.options = options;\n        this._listeners = 'WeakMap' in globals ? new WeakMap() : undefined;\n    }\n    observe(element, listener) {\n        this._listeners.set(element, listener);\n        this._getObserver().observe(element, this.options);\n        return () => {\n            this._listeners.delete(element);\n            this._observer.unobserve(element); // this line can probably be removed\n        };\n    }\n    _getObserver() {\n        var _a;\n        return (_a = this._observer) !== null && _a !== void 0 ? _a : (this._observer = new ResizeObserver((entries) => {\n            var _a;\n            for (const entry of entries) {\n                ResizeObserverSingleton.entries.set(entry.target, entry);\n                (_a = this._listeners.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n            }\n        }));\n    }\n}\n// Needs to be written like this to pass the tree-shake-test\nResizeObserverSingleton.entries = 'WeakMap' in globals ? new WeakMap() : undefined;\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction comment(content) {\n    return document.createComment(content);\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_immediate_propagation(fn) {\n    return function (event) {\n        event.stopImmediatePropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set && always_set_through_set_attribute.indexOf(key) === -1) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction set_dynamic_element_data(tag) {\n    return (/-/.test(tag)) ? set_custom_element_data_map : set_attributes;\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction init_binding_group(group) {\n    let _inputs;\n    return {\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            _inputs.forEach(input => group.push(input));\n        },\n        /* remove */ r() {\n            _inputs.forEach(input => group.splice(group.indexOf(input), 1));\n        }\n    };\n}\nfunction init_binding_group_dynamic(group, indexes) {\n    let _group = get_binding_group(group);\n    let _inputs;\n    function get_binding_group(group) {\n        for (let i = 0; i < indexes.length; i++) {\n            group = group[indexes[i]] = group[indexes[i]] || [];\n        }\n        return group;\n    }\n    function push() {\n        _inputs.forEach(input => _group.push(input));\n    }\n    function remove() {\n        _inputs.forEach(input => _group.splice(_group.indexOf(input), 1));\n    }\n    return {\n        /* update */ u(new_indexes) {\n            indexes = new_indexes;\n            const new_group = get_binding_group(group);\n            if (new_group !== _group) {\n                remove();\n                _group = new_group;\n                push();\n            }\n        },\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            push();\n        },\n        /* remove */ r: remove\n    };\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction claim_comment(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 8, (node) => {\n        node.data = '' + data;\n        return undefined;\n    }, () => comment(data), true);\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    text.data = data;\n}\nfunction set_data_contenteditable(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable(text, data);\n    }\n    else {\n        set_data(text, data);\n    }\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value == null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value, mounting) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    if (!mounting || value !== undefined) {\n        select.selectedIndex = -1; // no option should be selected\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked');\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_iframe_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n            // make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n            // see https://github.com/sveltejs/svelte/issues/4233\n            fn();\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nconst resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'content-box' });\nconst resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'border-box' });\nconst resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'device-pixel-content-box' });\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            /** #7364  target for <template> may be provided as #document-fragment(11) */\n            else\n                this.e = element((target.nodeType === 11 ? 'TEMPLATE' : target.nodeName));\n            this.t = target.tagName !== 'TEMPLATE' ? target : target.content;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nlet render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n */\nfunction flush_render_callbacks(fns) {\n    const filtered = [];\n    const targets = [];\n    render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));\n    targets.forEach((c) => c());\n    render_callbacks = filtered;\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    const updates = [];\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            // defer updates until all the DOM shuffling is done\n            updates.push(() => block.p(child_ctx, dirty));\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    run_all(updates);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst _boolean_attributes = [\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n];\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n */\nconst boolean_attributes = new Set([..._boolean_attributes]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        flush_render_callbacks($$.after_update);\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.59.2' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation, has_stop_immediate_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    if (has_stop_immediate_propagation)\n        modifiers.push('stopImmediatePropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_contenteditable_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable_dev(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable_dev(text, data);\n    }\n    else {\n        set_data_dev(text, data);\n    }\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, ResizeObserverSingleton, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_iframe_resize_listener, add_location, add_render_callback, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_comment, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, comment, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, contenteditable_truthy_values, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, flush_render_callbacks, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, init_binding_group, init_binding_group_dynamic, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, resize_observer_border_box, resize_observer_content_box, resize_observer_device_pixel_content_box, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_contenteditable, set_data_contenteditable_dev, set_data_dev, set_data_maybe_contenteditable, set_data_maybe_contenteditable_dev, set_dynamic_element_data, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, split_css_unit, spread, src_url_equal, start_hydrating, stop_immediate_propagation, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.9\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || value === undefined;\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */ function isNonPrimitive(n) {\n    return typeof n === 'symbol' || typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n);\n}\nfunction isNumber(n) {\n    return !isNonPrimitive(n) && !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , vScale , _parsed  } = meta;\n        const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n            if (spanGaps) {\n                const distanceToDefinedLo = _parsed.slice(0, start + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                start -= Math.max(0, distanceToDefinedLo);\n            }\n            start = _limitValue(start, 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            let end = Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n            if (spanGaps) {\n                const distanceToDefinedHi = _parsed.slice(end - 1).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                end += Math.max(0, distanceToDefinedHi);\n            }\n            count = _limitValue(end, start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nfunction getDatasetClipArea(chart, meta) {\n    const clip = meta._clip;\n    if (clip.disabled) {\n        return false;\n    }\n    const area = getDatasetArea(meta, chart.chartArea);\n    return {\n        left: clip.left === false ? 0 : area.left - (clip.left === true ? 0 : clip.left),\n        right: clip.right === false ? chart.width : area.right + (clip.right === true ? 0 : clip.right),\n        top: clip.top === false ? 0 : area.top - (clip.top === true ? 0 : clip.top),\n        bottom: clip.bottom === false ? chart.height : area.bottom + (clip.bottom === true ? 0 : clip.bottom)\n    };\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, getStyle as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, getRtlAdapter as aA, overrideTextDirection as aB, _textX as aC, restoreTextDirection as aD, drawPointLegend as aE, distanceBetweenPoints as aF, noop as aG, _setMinAndMaxByKey as aH, niceNum as aI, almostWhole as aJ, almostEquals as aK, _decimalPlaces as aL, Ticks as aM, log10 as aN, _longestText as aO, _filterBetween as aP, _lookup as aQ, isPatternOrGradient as aR, getHoverColor as aS, clone as aT, _merger as aU, _mergerIf as aV, _deprecated as aW, _splitKey as aX, toFontString as aY, splineCurve as aZ, splineCurveMonotone as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, getDatasetClipArea as ah, _elementsEqual as ai, _isClickEvent as aj, _isBetween as ak, _readValueToProps as al, _updateBezierControlPoints as am, _computeSegments as an, _boundSegments as ao, _steppedInterpolation as ap, _bezierInterpolation as aq, _pointInLine as ar, _steppedLineTo as as, _bezierCurveTo as at, drawPoint as au, addRoundedRectPath as av, toTRBL as aw, toTRBLCorners as ax, _boundSegment as ay, _normalizeAngle as az, isArray as b, fontString as b0, toLineHeight as b1, PITAU as b2, INFINITY as b3, RAD_PER_DEG as b4, QUARTER_PI as b5, TWO_THIRDS_PI as b6, _angleDiff as b7, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.dataset.js.map\n","/*!\n * Chart.js v4.4.9\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as getDatasetClipArea, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _readValueToProps, am as _updateBezierControlPoints, an as _computeSegments, ao as _boundSegments, ap as _steppedInterpolation, aq as _bezierInterpolation, ar as _pointInLine, as as _steppedLineTo, at as _bezierCurveTo, au as drawPoint, av as addRoundedRectPath, aw as toTRBL, ax as toTRBLCorners, ay as _boundSegment, az as _normalizeAngle, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as distanceBetweenPoints, aG as noop, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as Ticks, aN as log10, aO as _longestText, aP as _filterBetween, aQ as _lookup } from './chunks/helpers.dataset.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            const result = lookupMethod(data, axis, value);\n            if (spanGaps) {\n                const { vScale  } = controller._cachedMeta;\n                const { _parsed  } = metaset;\n                const distanceToDefinedLo = _parsed.slice(0, result.lo + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.lo -= Math.max(0, distanceToDefinedLo);\n                const distanceToDefinedHi = _parsed.slice(result.hi).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.hi += Math.max(0, distanceToDefinedHi);\n            }\n            return result;\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.9\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        const clip = getDatasetClipArea(this, meta);\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (clip) {\n            clipArea(ctx, clip);\n        }\n        meta.controller.draw();\n        if (clip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { chart , index , line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    const meta = chart.getDatasetMeta(index);\n    const clip = getDatasetClipArea(chart, meta);\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis,\n            clip\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale , clip  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property,\n            clip\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property,\n        clip\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale , clip  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, clip, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, clip, bounds) {\n    const chartArea = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x' || property === 'y') {\n        let left, top, right, bottom;\n        if (property === 'x') {\n            left = start;\n            top = chartArea.top;\n            right = end;\n            bottom = chartArea.bottom;\n        } else {\n            left = chartArea.left;\n            top = start;\n            right = chartArea.right;\n            bottom = end;\n        }\n        ctx.beginPath();\n        if (clip) {\n            left = Math.max(left, clip.left);\n            right = Math.min(right, clip.right);\n            top = Math.max(top, clip.top);\n            bottom = Math.min(bottom, clip.bottom);\n        }\n        ctx.rect(left, top, right - left, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","<script>\n\timport { onMount, tick } from 'svelte';\n\timport { Chart, registerables } from 'chart.js';\n\tChart.register(...registerables);\n\n\tlet ticker = 'AAPL';\n\tlet start = '2020-01-01';\n\tlet end = '2024-12-31';\n\tlet investment_amount = 1000;\n\tlet monthly_contribution = 50;\n\tlet country = 'US';\n\tlet result = null;\n\tlet loading = false;\n\tlet chartCanvas;\n\tlet chart;\n\n\tconst popularTickers = [\n\t\t{ name: 'S&P 500', symbol: '^GSPC' },\n\t\t{ name: 'NASDAQ 100', symbol: '^NDX' },\n\t\t{ name: 'Dow Jones', symbol: '^DJI' },\n\t\t{ name: 'Russell 2000', symbol: '^RUT' },\n\t\t{ name: 'FTSE 100', symbol: '^FTSE' },\n\t\t{ name: 'DAX', symbol: '^GDAXI' },\n\t\t{ name: 'CAC 40', symbol: '^FCHI' },\n\t\t{ name: 'Nikkei 225', symbol: '^N225' },\n\t\t{ name: 'Hang Seng', symbol: '^HSI' },\n\t\t{ name: 'Apple Inc.', symbol: 'AAPL' }\n\t];\n\n\tasync function fetchData() {\n\t\tloading = true;\n\t\tresult = null;\n\n\t\tconst url = `https://web-production-feab.up.railway.app/investment_performance?ticker=${ticker}&start=${start}&end=${end}&investment_amount=${investment_amount}&monthly_contribution=${monthly_contribution}&country=${country}`;\n\t\t\n\t\ttry {\n\t\t\tconst res = await fetch(url);\n\t\t\tif (!res.ok) throw new Error('API error');\n\t\t\tresult = await res.json();\n\n\t\t\tif (result?.monthly_data?.length) {\n\t\t\t\tawait tick(); // wait for canvas to be rendered\n\t\t\t\tdrawChart(result.monthly_data);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tresult = { error: 'Failed to fetch data. Please check inputs or try again later.' };\n\t\t} finally {\n\t\t\tloading = false;\n\t\t}\n\t}\n\n\tfunction drawChart(data) {\n\t\tconst labels = data.map(item => item.month);\n\t\tconst nominalValues = [];\n\t\tconst realValues = [];\n\t\tconst cashValues = [];\n\n\t\tlet nominalValue = result.investment_amount;\n\t\tlet realValue = result.investment_amount;\n\t\tlet cashValue = result.investment_amount;\n\n\t\tdata.forEach((item, i) => {\n\t\t\tif (i > 0) {\n\t\t\t\tnominalValue += result.monthly_contribution;\n\t\t\t\trealValue += result.monthly_contribution;\n\t\t\t\tcashValue += result.monthly_contribution;\n\t\t\t}\n\n\t\t\t// Apply returns\n\t\t\tnominalValue *= (1 + item.nominal_return_percent / 100);\n\t\t\trealValue *= (1 + item.real_return_percent / 100);\n\n\t\t\t// Adjust for inflation\n\t\t\tcashValue *= (1 / (1 + item.inflation_rate_percent / 100));\n\n\t\t\tnominalValues.push(nominalValue.toFixed(2));\n\t\t\trealValues.push(realValue.toFixed(2));\n\t\t\tcashValues.push(cashValue.toFixed(2));\n\t\t});\n\n\t\tif (chart) chart.destroy();\n\n\t\tchart = new Chart(chartCanvas, {\n\t\t\ttype: 'line',\n\t\t\tdata: {\n\t\t\t\tlabels,\n\t\t\t\tdatasets: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: `${ticker} Nominal Value`,\n\t\t\t\t\t\tdata: nominalValues,\n\t\t\t\t\t\tborderColor: 'royalblue',\n\t\t\t\t\t\tbackgroundColor: 'rgba(65, 105, 225, 0.2)',\n\t\t\t\t\t\tfill: false,\n\t\t\t\t\t\ttension: 0.3\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: `${ticker} Real Value`,\n\t\t\t\t\t\tdata: realValues,\n\t\t\t\t\t\tborderColor: 'green',\n\t\t\t\t\t\tbackgroundColor: 'rgba(34, 139, 34, 0.2)',\n\t\t\t\t\t\tfill: false,\n\t\t\t\t\t\ttension: 0.3\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'Cash Buying Power',\n\t\t\t\t\t\tdata: cashValues,\n\t\t\t\t\t\tborderColor: 'orangered',\n\t\t\t\t\t\tbackgroundColor: 'rgba(255, 69, 0, 0.2)',\n\t\t\t\t\t\tfill: false,\n\t\t\t\t\t\tborderDash: [5, 5],\n\t\t\t\t\t\ttension: 0.3\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\toptions: {\n\t\t\t\tresponsive: true,\n\t\t\t\tscales: {\n\t\t\t\t\tx: {\n\t\t\t\t\t\ttitle: { display: true, text: 'Month' }\n\t\t\t\t\t},\n\t\t\t\t\ty: {\n\t\t\t\t\t\ttitle: { display: true, text: 'Value ($)' },\n\t\t\t\t\t\tbeginAtZero: false\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n</script>\n\n<style>\n\th1 {\n\t\tmargin-bottom: 1em;\n\t}\n\t.input-row {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tgap: 1em;\n\t\tmargin-bottom: 1em;\n\t}\n\t.left-inputs {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tgap: 0.5em;\n\t\tflex: 1;\n\t\tmax-width: 400px;\n\t}\n\t.dropdown {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tgap: 0.3em;\n\t\tmin-width: 200px;\n\t}\n\tinput, select, button {\n\t\tpadding: 0.5em;\n\t\tfont-size: 1em;\n\t}\n\tcanvas {\n\t\tmargin-top: 2em;\n\t\tmax-width: 100%;\n\t}\n\tp.error {\n\t\tcolor: red;\n\t}\n</style>\n\n<h1>Investment Performance Tracker</h1>\n\n<form on:submit|preventDefault={fetchData}>\n\t<div class=\"input-row\">\n\t\t<div class=\"left-inputs\">\n\t\t\t<input bind:value={ticker} placeholder=\"Ticker (e.g. AAPL)\" />\n\t\t\t<input type=\"date\" bind:value={start} />\n\t\t\t<input type=\"date\" bind:value={end} />\n\t\t\t<input type=\"number\" bind:value={investment_amount} placeholder=\"Initial Investment\" />\n\t\t\t<input type=\"number\" bind:value={monthly_contribution} placeholder=\"Monthly Contribution\" />\n\t\t\t<input bind:value={country} placeholder=\"Country Code (e.g. US)\" />\n\t\t\t<button type=\"submit\" disabled={loading}>{loading ? 'Loading...' : 'Get Performance'}</button>\n\t\t</div>\n\t\t<div class=\"dropdown\">\n\t\t\t<label>Popular Indexes:</label>\n\t\t\t<select on:change={(e) => ticker = e.target.value}>\n\t\t\t\t<option value=\"\">-- Choose an index --</option>\n\t\t\t\t{#each popularTickers as index}\n\t\t\t\t\t<option value={index.symbol}>{index.name}</option>\n\t\t\t\t{/each}\n\t\t\t</select>\n\t\t</div>\n\t</div>\n</form>\n\n{#if result?.monthly_data}\n\t<h2>Nominal vs Real Value</h2>\n\t<canvas bind:this={chartCanvas}></canvas>\n{/if}\n\n{#if result?.error}\n\t<p class=\"error\">{result.error}</p>\n{/if}\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'world'\n\t}\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","to_number","set_data","set_input_value","input","current_component","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","add_render_callback","push","seen_callbacks","Set","flushidx","saved_component","length","update","$$","e","pop","i","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","destroy_component","detaching","filtered","targets","c","indexOf","flush_render_callbacks","on_destroy","d","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_mount","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","fill","make_dirty","hydrate","nodes","Array","from","childNodes","children","l","intro","block","delete","local","customElement","m","new_on_destroy","map","filter","mount_component","SvelteComponent","$destroy","this","$on","type","index","splice","$set","$$props","obj","$$set","keys","round","v","lim","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","isArray","hsl2rgb","hue","hueParse","str","exec","p1","p2","hwb2rgb","hsv2rgb","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","pow","modHSL","ratio","tmp","clone","proto","assign","fromObject","functionParse","charAt","rgbParse","Color","constructor","len","_rgb","_valid","valid","rgbString","hslString","mix","color","weight","c1","c2","w2","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","uid","id","isNullOrUndef","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","source","klen","isValidKey","key","_merger","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","resolveObjectKey","resolver","parts","split","part","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","Symbol","toPrimitive","isNonPrimitive","isNaN","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","_arrayUnique","items","set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","vScale","_parsed","spanGaps","dataset","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","distanceToDefinedLo","findIndex","point","distanceToDefinedHi","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope$1","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","borderWidth","stroke","_isPointInArea","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","Error","join","_resolveScriptable","isIndexable","arr","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","_getParentNode","domNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","getSizeForArea","chartArea","field","getDatasetClipArea","_clip","disabled","getDatasetArea","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","elapsed","wait","promises","res","rej","resolved","method","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","found","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","iAxisKey","vAxisKey","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","toClip","defaultClip","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","DoughnutController","animateRotate","animateScale","cutout","circumference","spacing","legend","generateLabels","fontColor","getDataVisibility","legendItem","toggleDataVisibility","super","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","controllers","__proto__","BarController","categoryPercentage","barPercentage","grouped","_index_","_value_","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","currentParsed","iScaleValue","skipNull","find","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","BubbleController","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","abstract","DateAdapterBase","members","formats","diff","startOf","endOf","adapters","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","renderWidth","displayWidth","displayHeight","initCanvas","proxies","$proxies","attach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","scaleOptions","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","BarElement","addRectPath","mouseX","mouseY","inXRange","inYRange","PointElement","hoverRadius","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","plugin_colors","forceOverride","_args","chartOptions","containsColorDefenition","colorizer","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","Colors","Decimation","Filler","SubTitle","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","generateTicks","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","itemOpts","extra","createPointLabelItem","isNotOverlapped","buildPointLabelItems","hLimits","vLimits","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","CategoryScale","_addedLabels","added","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","t_value","__value","symbol","if_block0","monthly_data","create_if_block_1","if_block1","create_if_block","form","div2","div0","input0","input1","input2","input3","input4","input5","button","div1","select","preventDefault","t8","t8_value","iterations","chartCanvas","ticker","investment_amount","monthly_contribution","country","loading","$$invalidate","url","fetch","json","nominalValues","realValues","cashValues","nominalValue","realValue","cashValue","nominal_return_percent","real_return_percent","inflation_rate_percent","toFixed","drawChart","$$value"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}